#!/bin/sh

if [ -z "${LIB_COMMON_INCLUDED}" ]; then
LIB_COMMON_INCLUDED=1

zf_usage() {
    local msg=$1
    [ ! -z "${msg}" ] && echo "Error: ${msg}" >&2
    cat >&2 << EOT
Usage: zfsync [-dhiPq] -H target_host -T target_zfs [-U target_user] [-I identity_file] source_zfs

    source_zfs is the filesystem that needs syncing to a remote host

Options:
    -d                  enable debugging (negates -q)
    -h                  show you this help page
    -H target_host      host to send snapshots to [required]
    -i                  send incremental stream between local and remote snapshot
                        instead of a stream package of all intermediary snapshots
    -I identity_file    use this key for authentication
    -P                  do not set user properties on remote end
    -q                  be more quiet
    -T target_zfs       ZFS on target host to send snapshots to [required]
    -U target_user      alternative user to authenticate as on remote host

EOT
    [ ! -z "${msg}" ] && exit 1
}

zf_debug() {
    [ ${ZF_DEBUG} -eq 1 ] && \
        printf "[%s] Debug: %s\n" "$(date)" "${@}" >&2
    return 0
}

zf_warn() {
    printf "[%s] Warning: %s\n" "$(date)" "${@}" >&2
}

zf_error() {
    printf "[%s] Error: %s\n" "$(date)" "${@}" >&2
    exit 1
}

zf_msg(){
    [ ${ZF_SILENT} -eq 0 -o ${ZF_DEBUG} -eq 1 ] && \
        printf "[%s] %s\n" "$(date)" "${@}" >&2
    return 0
}

fi
